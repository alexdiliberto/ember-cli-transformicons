name: CI

on:
  pull_request:
  push:
    # filtering branches here prevents duplicate builds from pull_request and push
    branches:
      - master
      - 'v*'
    # always run CI for tags
    tags:
      - '*'
  # early issue detection: run CI weekly on Sundays
  schedule:
  - cron:  '0 6 * * 0'

env:
  CI: true

jobs:
  context-dump:
    name: Context Dump
    runs-on: ubuntu-16.04
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Set ENV
        run: |
          echo "::set-env name=VERSION_PATH::${GITHUB_REF##*/}"
      - name: Test conditional logic
        run: |
          echo "${{ github.ref }}"
          echo "${{ github.event_name }}"
          echo ${GITHUB_REF##*/}
          echo $VERSION_PATH
          echo "$VERSION_PATH"
          echo "${{ github.ref == 'refs/heads/master' && github.event_name == 'push'}}"

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 10
      - name: Install Dependencies
        run: yarn install --non-interactive
      - name: Lint HBS
        run: yarn lint:hbs
      - name: Lint JS
        run: yarn lint:js

  test-locked-deps:
    name: Locked Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 10
      - name: Install Dependencies
        run: yarn install --non-interactive
      - name: Browser Tests
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
        run: yarn test

  test-floating-deps:
    name: Floating Dependencies
    runs-on: ubuntu-latest
    needs: [lint, test-locked-deps]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 10
      - name: Install Dependencies without Lockfile
        run: yarn install --no-lockfile --non-interactive
      - name: Browser Tests
        run: yarn test

  test-ember-try:
    name: Ember Try
    runs-on: ubuntu-latest
    needs: [lint, test-locked-deps]
    strategy:
      matrix:
        scenario:
          - ember-3.13
          - ember-release
          - ember-beta
          - ember-canary
          - ember-default-with-jquery
          - ember-classic
        include:
          - scenario: ember-canary
            continue-on-error: true
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 10
      - name: Install Dependencies
        run: yarn install --no-lockfile --non-interactive
      - name: "Scenario: ${{ matrix.scenario }}"
        run: yarn ember try:one ${{ matrix.scenario }}
        continue-on-error: ${{ matrix['continue-on-error'] == true }}

  # https://github.com/ember-learn/ember-cli-addon-docs/issues/437
  deploy-prod:
    name: Production Deploy
    runs-on: ubuntu-latest
    needs: [test-floating-deps, test-ember-try]
    # if: (branch = master OR tag IS present) AND type = push
    # if: success() && github.ref == 'refs/heads/master' && github.event_name == 'push'
    if: success() && github.event_name == 'push'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 10
      - name: Install Dependencies
        run: yarn install --no-lockfile --non-interactive
      - name: Set ENV
        # 'master' or 'v1.2.3'
        run: echo "::set-env name=ADDON_DOCS_VERSION_PATH::${GITHUB_REF##*/}"
      - name: Deploy
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        run: yarn ember deploy production
